/*
 * stm32f407xx_spidriver.h
 *
 *  Created on: 23-May-2020
 *      Author: Selva Kumar
 */

#ifndef INC_STM32F407XX_SPIDRIVER_H_
#define INC_STM32F407XX_SPIDRIVER_H_

#include "stm32f4xx.h"
//peripheral structure for SPI

typedef struct
{
	 uint8_t SPI_DeviceMode;
	 uint8_t SPI_BusConfig;
	 uint8_t SPI_SclkSpeed;
	 uint8_t SPI_DFF;
	 uint8_t SPI_CPOL;
	 uint8_t SPI_CPHA;
	 uint8_t SPI_SSM;
}SPI_Config_t;

//handle structure for SPIx peripheral

typedef struct
{
	SPI_RegDef_t   *pSPIx; //holds base address of SPI1,2,3
	SPI_Config_t   SPIConfig;
}SPI_Handle_t;


/*
 * SPI_devicemode
 */

#define SPI_DEVICE_MODE_MASTER  1
#define SPI_DEVICE_MODE_SLAVE   0

/*
 * SPI_busconfig
 */

#define SPI_BUS_CONFIG_FD              1
#define SPI_BUS_CONFIG_HD              2
#define SPI_BUS_CONFIG_SIMPLEX_TXONLY  3
#define SPI_BUS_CONFIG_SIMPLEX_RXONLY  4


/*
 * SPI_CLKSPEED
 */

#define SPI_SCLK_SPEED_DIV2          0
#define SPI_SCLK_SPEED_DIV4          1
#define SPI_SCLK_SPEED_DIV8          2
#define SPI_SCLK_SPEED_DIV16         3
#define SPI_SCLK_SPEED_DIV32         4
#define SPI_SCLK_SPEED_DIV64         5
#define SPI_SCLK_SPEED_DIV128        6
#define SPI_SCLK_SPEED_DIV256        7

/*
 * SPI_DFF
 */

#define SPI_DFF_8BITS 1
#define SPI_DFF_16BITS 0

/*
 * CPOL
 */

#define SPI_CPOL_HIGH 1
#define SPI_CPOL_LOW  0

/*
 * CPHA
 */

#define SPI_CPHA_HIGH 1
#define SPI_CPHA_LOW  0

/*
 * SPI_SSM
 */

#define SPI_SSM_EN  1
#define SPI_SSM_DI  0

/*
 * SPI related status flag definition
 */

#define SPI_TXE_FLAG  (1 << SPI_SR_TXE)

/*
 * Peripheral clock setup
 *
 */

void SPI_PeriClkControl(SPI_RegDef_t *pSPIx,uint8_t EnorDi);

/*
 *
 * Init and De-init
 *
 */

void SPI_Init(SPI_Handle_t *pGPIOHandle);
void SPI_DeInit(SPI_RegDef_t *pGPIOx);

/*
 * Data send and receive
 *
 */

void SPI_SendData(SPI_RegDef_t *pSPIx,uint8_t *pTxBuffer, uint32_t Len);

void SPI_ReceiveData(SPI_RegDef_t *pSPIx, uint8_t *pRxBuffer, uint32_t Len);


/*
 * IRQ config and ISR handling
 *
 */

void SPI_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi);
void SPI_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority);
void SPI_IRQHandling(SPI_Handle_t *pHandle);

/*
 *SPI enable or disable API
 */

void SPI_PeripheralControl(SPI_RegDef_t *pSPIx, uint8_t EnOrDi);
void SPI_SSIConfig(SPI_RegDef_t *pSPIx, uint8_t EnOrDi);
void SPI_SSOEConfig(SPI_RegDef_t *pSPIx, uint8_t EnOrDi);            //SSOE bit for hardware slave select bit


#endif /* INC_STM32F407XX_SPIDRIVER_H_ */
